#include<stdio.h>
#include<string.h>
#include<stdbool.h>
#define MAX 5

int stack[MAX];
int top=-1;
// Function to push an element onto the stack
void push(int value)
{
    if(top>=MAX-1) 
	{
        	printf("Stack Overflow: Cannot push element onto a full stack.\n");
   	} 
	else 
	{
		stack[++top] = value;
		printf("Pushed %d onto the stack.\n", value);
    	}
}

// Function to pop an element from the stack
int pop() 
{
    if (top==-1) 
	{
		printf("Stack Underflow: Cannot pop from an empty stack.\n");
		return -1; // Return a sentinel value indicating failure
        } 
	else 
	{
        return stack[top--];
   	}
}

// Function to check if a string is a palindrome using a stack
bool isPalindrome(char str[]) 
{
    int length = strlen(str);
    int i;

    // Push the first half of the characters onto the stack
    for (i = 0; i < length / 2; i++) 
	{
        	push(str[i]);
    	}

    // Compare the second half of the characters with the stack
    for (i = (length + 1) / 2; i < length; i++) 
	{
		if (str[i] != pop())
		 {
		    return false; // Not a palindrome
        	}
    	}

    return true; // It's a palindrome
}

// Function to display the stack
void displayStack() 
{
    int i;
    if (top == -1)
    {
        printf("Stack is empty.\n");
    } 
    else 
    {
        printf("Stack elements:\n");
        for(i = 0; i <= top; i++) 
	{
            printf("%d ", stack[i]);
        }
        printf("\n");
    }
}

int main() 
{
    int choice, element;
    char str[100];

    while (1) 
    {
        printf("\nStack Operations Menu:\n");
        printf("1. Push Element\n");
        printf("2. Pop Element\n");
        printf("3. Check Palindrome\n");
        printf("4. Display Stack\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) 
	{
            case 1:
                printf("Enter the element to push: ");
                scanf("%d", &element);
                push(element);
                break;
            case 2:
                element = pop();
                if (element != -1) 
		{
                    printf("Popped element: %d\n", element);
                }
                break;
            case 3:
                printf("Enter a string: ");
                scanf("%s", str);
                if(isPalindrome(str)) 
		{
                    printf("The string is a palindrome.\n");
                } else 
		{
                    printf("The string is not a palindrome.\n");
                }
                break;
            case 4:
                displayStack();
                break;
            case 5:
                printf("Exiting the program.\n");
                return 0;
            default:
                printf("Invalid choice. Please try again.\n");
        }
    }
    return 0;
}
